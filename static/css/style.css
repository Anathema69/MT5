:root {
  --bg: #0f172a;
  --card-bg: #1f2a3a;
  --input-bg: #0f172a;
  --border: #334155;
  --text: #e2e8f0;
  --label: #94a3b8;
  --accent: #06b6d4;
}

/* ================
   Reset + base
   ================ */
*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
body {
  background: var(--bg);
  color: var(--text);
  font-family: 'Inter', sans-serif;
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  padding: 1rem;
}

/* ================
   Card contenedor
   ================ */
.container {
  width: 100%;
  max-width: 600px;
}
.card {
  background: var(--card-bg);
  padding: 2rem;
  border-radius: 12px;
  box-shadow: 0 8px 24px rgba(0,0,0,0.5);
}
.card h1 {
  font-size: 1.75rem;
  margin-bottom: 1.5rem;
  color: #fff;
}

/* ================
   Grid fluido
   ================ */
.grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px,1fr));
  gap: 1rem;
}
.field {
  display: flex;
  flex-direction: column;
}
.field label {
  font-size: 0.875rem;
  color: var(--label);
  margin-bottom: 0.25rem;
}

/* ================
   Inputs y Selects
   ================ */
.field select,
.field input {
  padding: 0.75rem 1rem;
  background: var(--input-bg);
  border: 1px solid var(--border);
  border-radius: 8px;
  color: var(--text);
  font-size: 1rem;
  appearance: none;
  transition: border-color .2s, box-shadow .2s;
}
.field select {
  background-image: url('/static/img/arrow-down.png');
  background-repeat: no-repeat;
  background-position: right 1rem center;
  background-size: 1em;
}
.field select:focus,
.field input:focus {
  border-color: var(--accent);
  box-shadow: 0 0 0 2px rgba(6,182,212,0.3);
  outline: none;
}

/* ================
   Tom Select custom
   ================ */
.ts-control {
  padding: 1rem 1rem 0.5rem;
  background: var(--input-bg) !important;
  border: 1px solid var(--border) !important;
  border-radius: 8px !important;
}
.ts-control .ts-control-content {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
}

/* --- Token del elemento seleccionado --- */
.ts-control .item {
  background: var(--accent);
  color: var(--bg);
  border-radius: 4px;
  padding: 0.25rem 0.5rem;
  margin: 0 0.25rem 0.25rem 0;
  font-size: 0.875rem;
}

/* --- Texto que escribes --- */
.ts-control input {
  color: var(--text) !important;
  width: auto !important;
}
.ts-control input::placeholder {
  color: var(--label) !important;
}

/* --- Opciones desplegable --- */
.ts-control .ts-dropdown-content {
  background: var(--card-bg);
  border: 1px solid var(--border);
}
.ts-control .ts-option {
  color: var(--text);
  padding: 0.5rem 1rem;
}
.ts-control .ts-option:hover,
.ts-control .ts-option.ts-selected {
  background: var(--accent);
  color: var(--bg);
}

/* ================
   Botón enviar
   ================ */
button[type="submit"] {
  width: 100%;
  margin-top: 1.5rem;
  padding: 0.75rem;
  background: var(--accent);
  color: var(--bg);
  font-size: 1rem;
  font-weight: 600;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: background .2s;
}
button[type="submit"]:hover {
  background: #05a3b4;
}

/* ================
   Tipo de activo (radio)
   ================ */
.asset-type {
  margin-bottom: 1.5rem;
  display: flex;
  justify-content: center;
  gap: 2rem;
  font-size: 0.9rem;
  color: var(--text);
}
.asset-type input {
  margin-right: 0.25rem;
}

/* ================
   Loader / Spinner
   ================ */
.loader-overlay {
  position: fixed;
  top: 0; left: 0; right: 0; bottom: 0;
  background: rgba(0, 0, 0, 0.6);
  /* inicialmente oculto por inline-style */
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
}
.loader-content {
  text-align: center;
  color: #fff;
}
.spinner {
  width: 48px;
  height: 48px;
  border: 4px solid rgba(255,255,255,0.3);
  border-top-color: var(--accent);
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-bottom: 0.5rem;
}
@keyframes spin {
  to { transform: rotate(360deg); }
}

/* ================
   Responsivo
   ================ */
@media (max-width: 480px) {
  .card { padding: 1rem; }
  .card h1 { font-size: 1.5rem; }
  .grid { gap: 0.75rem; }
  .field select,
  .field input {
    padding: 0.75rem;
  }
}
/* ==============================
   Checkbox: restaurar apariencia nativa
   ============================== */
input[type="checkbox"] {
  /* Forzamos la apariencia estándar del sistema (Windows/macOS/etc) */
  -webkit-appearance: checkbox;  /* Chrome, Safari */
  -moz-appearance: checkbox;     /* Firefox */
  appearance: checkbox;
  width: 1.25rem;   /* Tamaño un poco más grande */
  height: 1.25rem;
  cursor: pointer;
  margin-right: 0.5rem;
}

/* Color de fondo y borde para el checkbox cuando NO está marcado */
input[type="checkbox"] {
  background-color: var(--input-bg);
  border: 1px solid var(--border);
  border-radius: 4px;
}

/* Cuando está marcado, que el fondo sea var(--accent) y el check contrastante */
input[type="checkbox"]:checked {
  background-color: var(--accent);
  border-color: var(--accent);
}

/* Ajuste fino: el ícono interno (✓) debe verse de color oscuro para contrastar */
input[type="checkbox"]:checked::before {
  content: "\2713";       /* ✓ */
  display: block;
  color: var(--bg);       /* tip: fondo oscuro es var(--bg), así el check se ve claro */
  font-weight: bold;
  text-align: center;
  line-height: 1.25rem;
}
